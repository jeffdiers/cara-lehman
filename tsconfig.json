{
  "compilerOptions": {
    /* Language and Environment */
    "module": "esnext" /* Specify what module code is generated. */,
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ] /* Specify a set of bundled library declaration files. */,
    "jsx": "preserve" /* Specify what JSX code is generated. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "allowJs": true /* Allow JavaScript files to be a part of your program. */,

    /* Module Resolution */
    "moduleResolution": "bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking of all declaration files (.d.ts). */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Ensure strict null checks. */,
    "strictFunctionTypes": true /* Ensure parameter and return types are subtype-compatible. */,
    "noUnusedLocals": true /* Report errors for unused local variables. */,
    "noUnusedParameters": true /* Report errors for unused function parameters. */,
    "noImplicitReturns": true /* Report errors for codepaths that do not explicitly return in a function. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statements. */,

    /* Emit Options */
    "noEmit": true /* Disable emitting files from a compilation. */,
    "incremental": true /* Enable incremental compilation by reading/writing information from prior compilations to a file on disk. */,

    /* Advanced Options */
    "plugins": [
      {
        "name": "next"
      }
    ] /* Load custom plugins. */,
    "paths": {
      "@/*": ["./*"]
    } /* Specify path mapping to be computed relative to baseUrl option. */
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
